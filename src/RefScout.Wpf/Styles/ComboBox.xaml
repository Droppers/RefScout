<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:RefScout.Wpf.Views.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Styles/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FabricComboBoxReadonlyToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="Arrow"
                            Width="32"
                            HorizontalAlignment="Right">
                            <controls:Icon
                                Width="20"
                                Height="20"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource Brushes.Foreground}"
                                IconName="{StaticResource Icon.ChevronDown}" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Neutral.Gray20}" />
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Neutral.Gray20}" />
                            <Setter Property="Foreground" Value="{DynamicResource Neutral.Gray90}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsFocused" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Neutral.Gray160}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FabricComboBoxEditableTextBox"
        BasedOn="{x:Null}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource Neutral.Gray160}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Neutral.Gray20}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="FabricComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="10,12" />
        <Setter Property="Background" Value="{DynamicResource Brushes.ControlBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource Brushes.ControlBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Neutral.Gray90}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FabricComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource Brushes.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Brushes.ControlBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="32" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            Focusable="False"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=bd}"
                            VerticalOffset="5">
                            <Border
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Margin="10,0,10,10"
                                Background="{DynamicResource Brushes.ControlBackground}"
                                BorderBrush="{DynamicResource Brushes.BorderDark}"
                                BorderThickness="1"
                                CornerRadius="5"
                                Effect="{DynamicResource Depth8}">
                                <ScrollViewer x:Name="Border" CanContentScroll="true">
                                    <ScrollViewer.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Border
                                                    Width="{Binding ActualWidth, TargetNullValue=0, FallbackValue=0, RelativeSource={RelativeSource AncestorType={x:Type Border}}}"
                                                    Height="{Binding ActualWidth, TargetNullValue=0, FallbackValue=0, RelativeSource={RelativeSource AncestorType={x:Type Border}}}"
                                                    Background="Black"
                                                    CornerRadius="5"
                                                    SnapsToDevicePixels="True" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </ScrollViewer.OpacityMask>
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <!--  ReSharper disable once Xaml.MissingGridIndex  -->
                        <ToggleButton
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource FabricComboBoxReadonlyToggleButton}" />
                        <!--  ReSharper disable once Xaml.MissingGridIndex  -->
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <!--  ReSharper disable once Xaml.MissingGridIndex  -->
                        <Border
                            x:Name="bd"
                            Grid.ColumnSpan="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{DynamicResource Neutral.Gray20}" />
                            <Setter Property="Background" Value="{DynamicResource Neutral.Gray20}" />
                            <Setter Property="Foreground" Value="{DynamicResource Neutral.Gray90}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource Brushes.BorderDark}" />
                            <Setter Property="Background" Value="{DynamicResource Brushes.ControlBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="bd" Property="BorderBrush"
                                    Value="{DynamicResource Communication.CommunicationPrimary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource FabricComboBoxItemStyle}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
</ResourceDictionary>